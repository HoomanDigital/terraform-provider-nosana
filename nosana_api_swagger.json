{
      "openapi": "3.0.0",
      "info": {
            "title": "@nosana/deployment-manager",
            "version": "0.0.0"
      },
      "components": {
            "securitySchemes": {
                  "Authorization": {
                        "type": "apiKey",
                        "in": "header",
                        "name": "Authorization"
                  }
            },
            "schemas": {
                  "Headers": {
                        "description": "Headers for deployment routes",
                        "type": "object",
                        "properties": {
                              "x-user-id": {
                                    "minLength": 43,
                                    "maxLength": 44,
                                    "type": "string"
                              },
                              "authorization": {
                                    "description": "Signed authentication message,",
                                    "type": "string"
                              }
                        },
                        "required": [
                              "x-user-id",
                              "authorization"
                        ],
                        "title": "Headers"
                  },
                  "Deployment": {
                        "allOf": [
                              {
                                    "type": "object",
                                    "properties": {
                                          "id": {
                                                "type": "string"
                                          },
                                          "name": {
                                                "type": "string"
                                          },
                                          "vault": {
                                                "minLength": 43,
                                                "maxLength": 44,
                                                "type": "string"
                                          },
                                          "market": {
                                                "minLength": 43,
                                                "maxLength": 44,
                                                "type": "string"
                                          },
                                          "owner": {
                                                "minLength": 43,
                                                "maxLength": 44,
                                                "type": "string"
                                          },
                                          "status": {
                                                "anyOf": [
                                                      {
                                                            "type": "string",
                                                            "enum": [
                                                                  "DRAFT"
                                                            ]
                                                      },
                                                      {
                                                            "type": "string",
                                                            "enum": [
                                                                  "ERROR"
                                                            ]
                                                      },
                                                      {
                                                            "type": "string",
                                                            "enum": [
                                                                  "STARTING"
                                                            ]
                                                      },
                                                      {
                                                            "type": "string",
                                                            "enum": [
                                                                  "RUNNING"
                                                            ]
                                                      },
                                                      {
                                                            "type": "string",
                                                            "enum": [
                                                                  "STOPPING"
                                                            ]
                                                      },
                                                      {
                                                            "type": "string",
                                                            "enum": [
                                                                  "STOPPED"
                                                            ]
                                                      },
                                                      {
                                                            "type": "string",
                                                            "enum": [
                                                                  "INSUFFICIENT_FUNDS"
                                                            ]
                                                      },
                                                      {
                                                            "type": "string",
                                                            "enum": [
                                                                  "ARCHIVED"
                                                            ]
                                                      }
                                                ]
                                          },
                                          "ipfs_definition_hash": {
                                                "type": "string"
                                          },
                                          "replicas": {
                                                "minimum": 1,
                                                "type": "number"
                                          },
                                          "timeout": {
                                                "minimum": 60,
                                                "type": "number"
                                          },
                                          "jobs": {
                                                "type": "array",
                                                "items": {
                                                      "type": "object",
                                                      "properties": {
                                                            "job": {
                                                                  "minLength": 43,
                                                                  "maxLength": 44,
                                                                  "type": "string"
                                                            },
                                                            "deployment": {
                                                                  "minLength": 43,
                                                                  "maxLength": 44,
                                                                  "type": "string"
                                                            },
                                                            "tx": {
                                                                  "type": "string"
                                                            },
                                                            "created_at": {
                                                                  "format": "date-time",
                                                                  "type": "string"
                                                            }
                                                      },
                                                      "required": [
                                                            "job",
                                                            "deployment",
                                                            "tx",
                                                            "created_at"
                                                      ]
                                                }
                                          },
                                          "events": {
                                                "type": "array",
                                                "items": {
                                                      "type": "object",
                                                      "properties": {
                                                            "category": {
                                                                  "anyOf": [
                                                                        {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                    "Deployment"
                                                                              ]
                                                                        },
                                                                        {
                                                                              "type": "string",
                                                                              "enum": [
                                                                                    "Event"
                                                                              ]
                                                                        }
                                                                  ]
                                                            },
                                                            "deploymentId": {
                                                                  "minLength": 43,
                                                                  "maxLength": 44,
                                                                  "type": "string"
                                                            },
                                                            "type": {
                                                                  "type": "string"
                                                            },
                                                            "message": {
                                                                  "type": "string"
                                                            },
                                                            "tx": {
                                                                  "type": "string"
                                                            },
                                                            "created_at": {
                                                                  "format": "date-time",
                                                                  "type": "string"
                                                            }
                                                      },
                                                      "required": [
                                                            "category",
                                                            "deploymentId",
                                                            "type",
                                                            "message",
                                                            "created_at"
                                                      ]
                                                }
                                          },
                                          "endpoints": {
                                                "type": "array",
                                                "items": {
                                                      "type": "object",
                                                      "properties": {
                                                            "opId": {
                                                                  "type": "string"
                                                            },
                                                            "port": {
                                                                  "type": "number"
                                                            },
                                                            "url": {
                                                                  "type": "string"
                                                            }
                                                      },
                                                      "required": [
                                                            "opId",
                                                            "port",
                                                            "url"
                                                      ]
                                                }
                                          },
                                          "created_at": {
                                                "format": "date-time",
                                                "type": "string"
                                          },
                                          "updated_at": {
                                                "format": "date-time",
                                                "type": "string"
                                          }
                                    },
                                    "required": [
                                          "id",
                                          "name",
                                          "vault",
                                          "market",
                                          "owner",
                                          "status",
                                          "ipfs_definition_hash",
                                          "replicas",
                                          "timeout",
                                          "jobs",
                                          "events",
                                          "endpoints",
                                          "created_at",
                                          "updated_at"
                                    ]
                              },
                              {
                                    "anyOf": [
                                          {
                                                "type": "object",
                                                "properties": {
                                                      "strategy": {
                                                            "anyOf": [
                                                                  {
                                                                        "type": "string",
                                                                        "enum": [
                                                                              "SIMPLE"
                                                                        ]
                                                                  },
                                                                  {
                                                                        "type": "string",
                                                                        "enum": [
                                                                              "SIMPLE-EXTEND"
                                                                        ]
                                                                  },
                                                                  {
                                                                        "type": "string",
                                                                        "enum": [
                                                                              "INFINITE"
                                                                        ]
                                                                  }
                                                            ]
                                                      }
                                                },
                                                "required": [
                                                      "strategy"
                                                ]
                                          },
                                          {
                                                "type": "object",
                                                "properties": {
                                                      "strategy": {
                                                            "type": "string",
                                                            "enum": [
                                                                  "SCHEDULED"
                                                            ]
                                                      },
                                                      "schedule": {
                                                            "description": "Cron expression for scheduled deployments",
                                                            "pattern": "^\\s*(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s*$",
                                                            "type": "string"
                                                      }
                                                },
                                                "required": [
                                                      "strategy",
                                                      "schedule"
                                                ]
                                          }
                                    ]
                              }
                        ],
                        "title": "Deployment"
                  },
                  "Deployments": {
                        "type": "array",
                        "items": {
                              "$ref": "#/components/schemas/Deployment"
                        },
                        "title": "Deployments"
                  },
                  "DeploymentStatus": {
                        "anyOf": [
                              {
                                    "type": "string",
                                    "enum": [
                                          "DRAFT"
                                    ]
                              },
                              {
                                    "type": "string",
                                    "enum": [
                                          "ERROR"
                                    ]
                              },
                              {
                                    "type": "string",
                                    "enum": [
                                          "STARTING"
                                    ]
                              },
                              {
                                    "type": "string",
                                    "enum": [
                                          "RUNNING"
                                    ]
                              },
                              {
                                    "type": "string",
                                    "enum": [
                                          "STOPPING"
                                    ]
                              },
                              {
                                    "type": "string",
                                    "enum": [
                                          "STOPPED"
                                    ]
                              },
                              {
                                    "type": "string",
                                    "enum": [
                                          "INSUFFICIENT_FUNDS"
                                    ]
                              },
                              {
                                    "type": "string",
                                    "enum": [
                                          "ARCHIVED"
                                    ]
                              }
                        ],
                        "title": "DeploymentStatus"
                  },
                  "DeploymentStrategy": {
                        "anyOf": [
                              {
                                    "type": "string",
                                    "enum": [
                                          "SIMPLE"
                                    ]
                              },
                              {
                                    "type": "string",
                                    "enum": [
                                          "SIMPLE-EXTEND"
                                    ]
                              },
                              {
                                    "type": "string",
                                    "enum": [
                                          "SCHEDULED"
                                    ]
                              },
                              {
                                    "type": "string",
                                    "enum": [
                                          "INFINITE"
                                    ]
                              }
                        ],
                        "title": "DeploymentStrategy"
                  },
                  "DeploymentCreateBody": {
                        "allOf": [
                              {
                                    "type": "object",
                                    "properties": {
                                          "name": {
                                                "type": "string"
                                          },
                                          "market": {
                                                "type": "string"
                                          },
                                          "ipfs_definition_hash": {
                                                "type": "string"
                                          },
                                          "replicas": {
                                                "minimum": 1,
                                                "type": "number"
                                          },
                                          "timeout": {
                                                "minimum": 60,
                                                "type": "number"
                                          }
                                    },
                                    "required": [
                                          "name",
                                          "market",
                                          "ipfs_definition_hash",
                                          "replicas",
                                          "timeout"
                                    ]
                              },
                              {
                                    "anyOf": [
                                          {
                                                "type": "object",
                                                "properties": {
                                                      "strategy": {
                                                            "anyOf": [
                                                                  {
                                                                        "type": "string",
                                                                        "enum": [
                                                                              "SIMPLE"
                                                                        ]
                                                                  },
                                                                  {
                                                                        "type": "string",
                                                                        "enum": [
                                                                              "SIMPLE-EXTEND"
                                                                        ]
                                                                  },
                                                                  {
                                                                        "type": "string",
                                                                        "enum": [
                                                                              "INFINITE"
                                                                        ]
                                                                  }
                                                            ]
                                                      }
                                                },
                                                "required": [
                                                      "strategy"
                                                ]
                                          },
                                          {
                                                "type": "object",
                                                "properties": {
                                                      "strategy": {
                                                            "type": "string",
                                                            "enum": [
                                                                  "SCHEDULED"
                                                            ]
                                                      },
                                                      "schedule": {
                                                            "description": "Cron expression for scheduled deployments",
                                                            "pattern": "^\\s*(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s*$",
                                                            "type": "string"
                                                      }
                                                },
                                                "required": [
                                                      "strategy",
                                                      "schedule"
                                                ]
                                          }
                                    ]
                              }
                        ],
                        "title": "DeploymentCreateBody"
                  },
                  "Endpoint": {
                        "type": "object",
                        "properties": {
                              "opId": {
                                    "type": "string"
                              },
                              "port": {
                                    "type": "number"
                              },
                              "url": {
                                    "type": "string"
                              }
                        },
                        "required": [
                              "opId",
                              "port",
                              "url"
                        ],
                        "title": "Endpoint"
                  },
                  "Error": {
                        "type": "object",
                        "properties": {
                              "error": {
                                    "type": "string"
                              }
                        },
                        "required": [
                              "error"
                        ],
                        "title": "Error"
                  },
                  "Events": {
                        "type": "object",
                        "properties": {
                              "category": {
                                    "anyOf": [
                                          {
                                                "type": "string",
                                                "enum": [
                                                      "Deployment"
                                                ]
                                          },
                                          {
                                                "type": "string",
                                                "enum": [
                                                      "Event"
                                                ]
                                          }
                                    ]
                              },
                              "deploymentId": {
                                    "minLength": 43,
                                    "maxLength": 44,
                                    "type": "string"
                              },
                              "type": {
                                    "type": "string"
                              },
                              "message": {
                                    "type": "string"
                              },
                              "tx": {
                                    "type": "string"
                              },
                              "created_at": {
                                    "format": "date-time",
                                    "type": "string"
                              }
                        },
                        "required": [
                              "category",
                              "deploymentId",
                              "type",
                              "message",
                              "created_at"
                        ],
                        "title": "Events"
                  },
                  "Jobs": {
                        "type": "object",
                        "properties": {
                              "job": {
                                    "minLength": 43,
                                    "maxLength": 44,
                                    "type": "string"
                              },
                              "deployment": {
                                    "minLength": 43,
                                    "maxLength": 44,
                                    "type": "string"
                              },
                              "tx": {
                                    "type": "string"
                              },
                              "created_at": {
                                    "format": "date-time",
                                    "type": "string"
                              }
                        },
                        "required": [
                              "job",
                              "deployment",
                              "tx",
                              "created_at"
                        ],
                        "title": "Jobs"
                  },
                  "PublicKey": {
                        "minLength": 43,
                        "maxLength": 44,
                        "type": "string",
                        "title": "PublicKey"
                  },
                  "Task": {
                        "type": "object",
                        "properties": {
                              "task": {
                                    "anyOf": [
                                          {
                                                "type": "string",
                                                "enum": [
                                                      "LIST"
                                                ]
                                          },
                                          {
                                                "type": "string",
                                                "enum": [
                                                      "EXTEND"
                                                ]
                                          },
                                          {
                                                "type": "string",
                                                "enum": [
                                                      "STOP"
                                                ]
                                          }
                                    ]
                              },
                              "deploymentId": {
                                    "minLength": 43,
                                    "maxLength": 44,
                                    "type": "string"
                              },
                              "tx": {
                                    "type": "string"
                              },
                              "due_at": {
                                    "format": "date-time",
                                    "type": "string"
                              },
                              "created_at": {
                                    "format": "date-time",
                                    "type": "string"
                              }
                        },
                        "required": [
                              "task",
                              "deploymentId",
                              "due_at",
                              "created_at"
                        ],
                        "title": "Task"
                  }
            }
      },
      "paths": {
            "/documentation/json": {
                  "get": {
                        "responses": {
                              "200": {
                                    "description": "Default Response"
                              }
                        }
                  }
            },
            "/api/deployments": {
                  "get": {
                        "tags": [
                              "Deployments"
                        ],
                        "description": "List all user deployments.",
                        "parameters": [
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "List of deployments.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Deployments"
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal Server Error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            },
            "/api/deployment/{deployment}": {
                  "get": {
                        "tags": [
                              "Deployments"
                        ],
                        "description": "Get a specific deployment by ID.",
                        "parameters": [
                              {
                                    "schema": {
                                          "$ref": "#/components/schemas/PublicKey"
                                    },
                                    "in": "path",
                                    "name": "deployment",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "Gets a deployment by ID.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Deployment"
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "404": {
                                    "description": "Deployment not found.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal Server Error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            },
            "/api/deployment/{deployment}/tasks": {
                  "get": {
                        "tags": [
                              "Deployments"
                        ],
                        "description": "Get scheduled tasks for a specific deployment.",
                        "parameters": [
                              {
                                    "schema": {
                                          "$ref": "#/components/schemas/PublicKey"
                                    },
                                    "in": "path",
                                    "name": "deployment",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "List of scheduled tasks for the deployment.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "array",
                                                      "items": {
                                                            "$ref": "#/components/schemas/Task"
                                                      }
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "404": {
                                    "description": "Deployment not found.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal Server Error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            },
            "/api/deployment/create": {
                  "post": {
                        "tags": [
                              "Deployments"
                        ],
                        "description": "Create a new deployment.",
                        "requestBody": {
                              "content": {
                                    "application/json": {
                                          "schema": {
                                                "$ref": "#/components/schemas/DeploymentCreateBody"
                                          }
                                    }
                              }
                        },
                        "parameters": [
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "Deployment created successfully.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Deployment"
                                                }
                                          }
                                    }
                              },
                              "400": {
                                    "description": "Invalid request body.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal Server Error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            },
            "/api/deployment/{deployment}/start": {
                  "post": {
                        "tags": [
                              "Deployments"
                        ],
                        "description": "Start an existing deployment.",
                        "parameters": [
                              {
                                    "schema": {
                                          "$ref": "#/components/schemas/PublicKey"
                                    },
                                    "in": "path",
                                    "name": "deployment",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "Deployment started successfully.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "object",
                                                      "properties": {
                                                            "status": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                        "STARTING"
                                                                  ]
                                                            },
                                                            "updated_at": {
                                                                  "format": "date-time",
                                                                  "type": "string"
                                                            }
                                                      },
                                                      "required": [
                                                            "status",
                                                            "updated_at"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "404": {
                                    "description": "Deployment not found.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal Server Error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            },
            "/api/deployment/{deployment}/stop": {
                  "post": {
                        "tags": [
                              "deployments"
                        ],
                        "description": "Stop a deployment",
                        "parameters": [
                              {
                                    "schema": {
                                          "$ref": "#/components/schemas/PublicKey"
                                    },
                                    "in": "path",
                                    "name": "deployment",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "Deployment stopped successfully.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "object",
                                                      "properties": {
                                                            "status": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                        "STOPPING"
                                                                  ]
                                                            },
                                                            "updated_at": {
                                                                  "format": "date-time",
                                                                  "type": "string"
                                                            }
                                                      },
                                                      "required": [
                                                            "status",
                                                            "updated_at"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "404": {
                                    "description": "Deployment not found.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal Server Error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            },
            "/api/deployment/{deployment}/archive": {
                  "patch": {
                        "tags": [
                              "Deployments"
                        ],
                        "description": "Archive a deployment",
                        "parameters": [
                              {
                                    "schema": {
                                          "$ref": "#/components/schemas/PublicKey"
                                    },
                                    "in": "path",
                                    "name": "deployment",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "Deployment archived successfully.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "object",
                                                      "properties": {
                                                            "status": {
                                                                  "type": "string",
                                                                  "enum": [
                                                                        "ARCHIVED"
                                                                  ]
                                                            },
                                                            "updated_at": {
                                                                  "format": "date-time",
                                                                  "type": "string"
                                                            }
                                                      },
                                                      "required": [
                                                            "status",
                                                            "updated_at"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "404": {
                                    "description": "Deployment not found.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal Server Error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            },
            "/api/deployment/{deployment}/update-replica-count": {
                  "patch": {
                        "tags": [
                              "Deployments"
                        ],
                        "description": "Update the replica count of a deployment",
                        "requestBody": {
                              "content": {
                                    "application/json": {
                                          "schema": {
                                                "type": "object",
                                                "properties": {
                                                      "replicas": {
                                                            "minimum": 1,
                                                            "type": "number"
                                                      }
                                                },
                                                "required": [
                                                      "replicas"
                                                ]
                                          }
                                    }
                              },
                              "required": true
                        },
                        "parameters": [
                              {
                                    "schema": {
                                          "$ref": "#/components/schemas/PublicKey"
                                    },
                                    "in": "path",
                                    "name": "deployment",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "Deployment replica count updated successfully.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "object",
                                                      "properties": {
                                                            "replicas": {
                                                                  "minimum": 1,
                                                                  "type": "number"
                                                            },
                                                            "updated_at": {
                                                                  "format": "date-time",
                                                                  "type": "string"
                                                            }
                                                      },
                                                      "required": [
                                                            "replicas",
                                                            "updated_at"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "404": {
                                    "description": "Deployment not found.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal Server Error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            },
            "/api/deployment/{deployment}/update-timeout": {
                  "patch": {
                        "tags": [
                              "Deployments"
                        ],
                        "description": "Update deployment timeout",
                        "requestBody": {
                              "content": {
                                    "application/json": {
                                          "schema": {
                                                "type": "object",
                                                "properties": {
                                                      "timeout": {
                                                            "minimum": 60,
                                                            "type": "number"
                                                      }
                                                },
                                                "required": [
                                                      "timeout"
                                                ]
                                          }
                                    }
                              },
                              "required": true
                        },
                        "parameters": [
                              {
                                    "schema": {
                                          "$ref": "#/components/schemas/PublicKey"
                                    },
                                    "in": "path",
                                    "name": "deployment",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "Deployment timeout updated successfully.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "object",
                                                      "properties": {
                                                            "timeout": {
                                                                  "type": "number"
                                                            },
                                                            "updated_at": {
                                                                  "type": "string"
                                                            }
                                                      },
                                                      "required": [
                                                            "timeout",
                                                            "updated_at"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "404": {
                                    "description": "Deployment not found.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal Server Error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            },
            "/api/vault/{vault}/withdraw": {
                  "post": {
                        "tags": [
                              "Vaults"
                        ],
                        "description": "Withdraw from a vault.",
                        "requestBody": {
                              "content": {
                                    "application/json": {
                                          "schema": {
                                                "type": "object",
                                                "properties": {
                                                      "SOL": {
                                                            "minimum": 0,
                                                            "type": "number"
                                                      },
                                                      "NOS": {
                                                            "minimum": 0,
                                                            "type": "number"
                                                      }
                                                }
                                          }
                                    }
                              }
                        },
                        "parameters": [
                              {
                                    "schema": {
                                          "$ref": "#/components/schemas/PublicKey"
                                    },
                                    "in": "path",
                                    "name": "vault",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "Withdrawal successful.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "object",
                                                      "properties": {
                                                            "transaction": {
                                                                  "type": "string"
                                                            }
                                                      },
                                                      "required": [
                                                            "transaction"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "400": {
                                    "description": "Invalid request body.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "404": {
                                    "description": "Vault not found.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal Server Error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            },
            "/api/vault/{vault}/update-balance": {
                  "patch": {
                        "tags": [
                              "Vaults"
                        ],
                        "description": "Update the balance of a vault.",
                        "parameters": [
                              {
                                    "schema": {
                                          "$ref": "#/components/schemas/PublicKey"
                                    },
                                    "in": "path",
                                    "name": "vault",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "minLength": 43,
                                          "maxLength": 44,
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "x-user-id",
                                    "required": true
                              },
                              {
                                    "schema": {
                                          "type": "string"
                                    },
                                    "in": "header",
                                    "name": "authorization",
                                    "required": true,
                                    "description": "Signed authentication message,"
                              }
                        ],
                        "security": [
                              {
                                    "Authorization": []
                              }
                        ],
                        "responses": {
                              "200": {
                                    "description": "Balance updated successfully.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "object",
                                                      "properties": {
                                                            "SOL": {
                                                                  "type": "number"
                                                            },
                                                            "NOS": {
                                                                  "type": "number"
                                                            }
                                                      }
                                                }
                                          }
                                    }
                              },
                              "401": {
                                    "description": "Unauthorized. Invalid or missing authentication.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "type": "string",
                                                      "enum": [
                                                            "Unauthorized"
                                                      ]
                                                }
                                          }
                                    }
                              },
                              "404": {
                                    "description": "Vault not found.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              },
                              "500": {
                                    "description": "Internal server error.",
                                    "content": {
                                          "application/json": {
                                                "schema": {
                                                      "$ref": "#/components/schemas/Error"
                                                }
                                          }
                                    }
                              }
                        }
                  }
            }
      }
}